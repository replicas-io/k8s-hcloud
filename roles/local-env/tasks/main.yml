---
- name: Install pip packages
  pip:
    name: "{{ item }}"
    state: latest
    extra_args: --user
  loop:
    - netaddr
    - dnspython

- name: Create the local working directory
  file:
    path: "{{ playbook_dir }}/replicas-cluster-{{ cluster.name }}.{{ cluster.domain }}"
    state: directory

- name: Gather remote roles
  command: "ansible-galaxy install --force --roles-path {{ playbook_dir }}/roles/ -r roles/requirements.yml"

- name: Copy the kubespray configuration files to the working directory
  copy:
    src: "{{ playbook_dir }}/kubespray-configs/"
    dest: "{{ playbook_dir }}/replicas-cluster-{{ cluster.name }}.{{ cluster.domain }}"
  delegate_to: localhost

- name: Copy the kubespray inventory file to the working directory
  copy:
    src: "templates/{{ inventory_file }}"
    dest: "{{ playbook_dir }}/replicas-cluster-{{ cluster.name }}.{{ cluster.domain }}/inventory.ini.j2"

- name: Render the deployments template
  template:
    src: "{{ playbook_dir }}/templates/deployments.yml.j2"
    dest: "{{ playbook_dir }}/replicas-cluster-{{ cluster.name }}.{{ cluster.domain }}/deployments.yml"

- name: Render the cluster up script
  template:
    src: "templates/cluster_up.sh.j2"
    dest: "{{ playbook_dir }}/replicas-cluster-{{ cluster.name }}.{{ cluster.domain }}/cluster_up.sh"
    mode: 0750

- name: Create a ansible config file
  blockinfile:
    path: "{{ playbook_dir }}/replicas-cluster-{{ cluster.name }}.{{ cluster.domain }}/ansible.cfg"
    block: |
      [defaults]
      host_key_checking = False
      private_key_file = {{ cluster.sshKeyFile }}
    create: true

- name: Copy the start script to the working directory
  copy:
    src: "files/kubespray.sh"
    dest: "{{ playbook_dir }}/replicas-cluster-{{ cluster.name }}.{{ cluster.domain }}/kubespray.sh"
    mode: 0770

- name: Create the kubespray directory
  file:
    path: "{{ playbook_dir }}/replicas-cluster-{{ cluster.name }}.{{ cluster.domain }}/kubespray-run"
    state: directory

- name: Download kubespray
  unarchive:
    src: "https://github.com/kubernetes-sigs/kubespray/archive/{{ kubesprayVersion }}.tar.gz"
    dest: "{{ playbook_dir }}/replicas-cluster-{{ cluster.name }}.{{ cluster.domain }}/kubespray-run"
    remote_src: yes
    extra_opts: --strip-components=1
